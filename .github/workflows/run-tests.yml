name: Run application tests
on:
  pull_request:
    branches:
      - main
      - dev

jobs:
  check_pinned_actions:
    name: Check for SHA pinned Actions
    runs-on: ubuntu-latest
    steps:
      - name: Ensure SHA pinned actions
        uses: zgosalvez/github-actions-ensure-sha-pinned-actions@a397475397837fb57396bd18f09d991625e604fe # pin@v1.2.0

  run-tests:
    name: Run application tests
    runs-on: ubuntu-latest

    services:
      postgres:
        image: postgres:13-alpine
        env:
          POSTGRES_HOST_AUTH_METHOD: trust
        options: >-
          --health-cmd pg_isready --health-interval 10s --health-timeout 5s
          --health-retries 5
        ports:
          - 5432:5432

    steps:
      - uses: actions/checkout@ec3a7ce113134d7a93b817d10a8272cb61118579 # pin@v2

      - name: Install Python 3.10
        uses: actions/setup-python@0ebf233433c08fb9061af664d501c3f3ff0e9e20 # pin@v3
        with:
          python-version: "3.10"

      - name: Load cached $HOME/.local
        uses: actions/cache@937d24475381cd9c75ae6db12cb4e79714b926ed # pin@v2
        with:
          path: ~/.local
          key: dotlocal-${{ runner.os }}-${{ hashFiles('.github/workflows/run-tests.yml') }}-0

      - name: Install and configure Poetry
        uses: snok/install-poetry@2bf112a0f6979928eb6b011f39700db589c5961e # pin@v1.3.1
        with:
          version: 1.1.13
          virtualenvs-create: true
          virtualenvs-in-project: true

      - name: Load cached venv
        id: cached-venv
        uses: actions/cache@937d24475381cd9c75ae6db12cb4e79714b926ed # pin@v2
        env:
          CACHE_OVERRIDE: '0'
        with:
          path: .venv
          key: venv-${{ runner.os }}-${{ hashFiles('**/poetry.lock') }}-${{ hashFiles('**/pyproject.toml') }}-${{ env.CACHE_OVERRIDE }}

      - name: Install dependencies
        if: steps.cached-venv.cache-hit != 'true'
        run: poetry install --no-interaction --no-root

      - name: Lint check
        run: |
          source .venv/bin/activate
          black . --check
          flake8 .
          isort --check-only .

      - name: Run tests
        run: |
          set -o pipefail
          source .venv/bin/activate
          pytest --junitxml=pytest.xml --cov-report=term-missing:skip-covered --cov=app tests/ | tee pytest-coverage.txt
